{"version":3,"sources":["Components/DiceRoller/DiceForm.js","Components/DiceRoller/Dice.js","Components/DiceRoller/DiceStats.js","Components/DiceRoller/DiceRoller.js","Components/InitTracker/InitForm.js","Components/InitTracker/Trackee.js","Components/InitTracker/InititiativeTracker.js","Components/Spells/Spells.js","App.js","serviceWorker.js","index.js"],"names":["DiceForm","props","className","ButtonGroup","onClick","e","sideCount","target","getAttribute","roll","Math","floor","random","update","size","Button","sides","variant","Dice","data","diceData","Card","bg","text","style","width","Body","Title","Subtitle","onInput","mod","id","value","type","placeholder","rem","marginLeft","DiceStats","modArr","rollArr","rawTotal","modTotal","forEach","die","push","modifier","join","DiceRoller","useState","dice","setDice","updateModifier","diceId","val","temp","find","tempDie","Number","removeDice","match","remId","indexOf","splice","console","log","rollData","newDice","length","map","key","InitForm","useForm","register","handleSubmit","errors","Form","onSubmit","create","name","init","Group","controlId","Label","Control","ref","required","min","as","Text","Trackee","colorType","color","remove","InititativeTracker","trackers","setTrackers","removeTrackee","trackee","index","str","num","ty","tid","sort","a","b","tracke","Spells","App","Nav","defaultActiveKey","Item","Link","eventKey","to","path","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c4e6cb4e.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\n\nfunction DiceForm(props) {\n  function handleButton(e) {\n    let sideCount = e.target.getAttribute(\"sides\");\n    let roll =\n      Math.floor(Math.random() * (e.target.getAttribute(\"sides\") - 1 + 1)) + 1;\n    props.update(sideCount, roll);\n  }\n\n  return (\n    <div className=\"d-flex flex-column\">\n      <ButtonGroup onClick={handleButton} size=\"lg\">\n        <Button sides=\"20\" variant=\"dark\">\n          20\n        </Button>\n        <Button sides=\"12\" variant=\"dark\">\n          12\n        </Button>\n        <Button sides=\"10\" variant=\"dark\">\n          10\n        </Button>\n        <Button sides=\"8\" variant=\"dark\">\n          8\n        </Button>\n        <Button sides=\"6\" variant=\"dark\">\n          6\n        </Button>\n        <Button sides=\"4\" variant=\"dark\">\n          4\n        </Button>\n        <Button sides=\"2\" variant=\"dark\">\n          2\n        </Button>\n      </ButtonGroup>\n    </div>\n  );\n}\n\nexport default DiceForm;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\n\nfunction Dice(props) {\n  let data = props.diceData;\n\n  function handleMod(e) {\n    props.mod(data.id, e.target.value);\n  }\n\n  function handleRem(e) {\n    props.rem(data.id);\n  }\n\n  return (\n    <Card bg=\"dark\" text=\"white\" style={{ width: \"16rem\" }}>\n      <Card.Body>\n        <Card.Title>\n          <h1>D{data.sides}</h1>\n        </Card.Title>\n        <Card.Subtitle className=\"mb-3\">\n          rolled a <b>{data.roll}</b>\n        </Card.Subtitle>\n        <input\n          onInput={handleMod}\n          type=\"number\"\n          placeholder=\"modifier (ex : -2)\"\n        ></input>\n        <Button\n          onClick={handleRem}\n          style={{ marginLeft: \"5px\" }}\n          variant=\"danger\"\n        >\n          X\n        </Button>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default Dice;\n","import React from \"react\";\n\nfunction DiceStats(props) {\n  let data = props.diceData;\n  let modArr = [];\n  let rollArr = [];\n  let rawTotal = 0;\n  let modTotal = 0;\n\n  data.forEach(die => {\n    modArr.push(die.modifier);\n    modTotal += die.modifier;\n    rollArr.push(die.roll);\n    rawTotal += die.roll;\n  });\n\n  return (\n    <div className=\"diceStats\">\n      <h3>Results</h3>\n      <p>\n        (Raw) {rawTotal} ({rollArr.join(\" + \")}) + (mod) {modTotal} (\n        {modArr.join(\" + \")})\n      </p>\n      <h3>Total is {rawTotal + modTotal}</h3>\n    </div>\n  );\n}\n\nexport default DiceStats;\n","import React, { useState } from \"react\";\nimport DiceForm from \"./DiceForm\";\nimport Dice from \"./Dice\";\nimport DiceStats from \"./DiceStats\";\n\nfunction DiceRoller() {\n  let [dice, setDice] = useState([]);\n\n  function updateDice(diceData, rollData) {\n    let newDice = {\n      sides: diceData,\n      roll: rollData,\n      modifier: 0,\n      id: dice.length + 1\n    };\n    setDice([...dice, newDice]);\n  }\n  function updateModifier(diceId, val) {\n    let temp = [...dice];\n    let match = temp.find(tempDie => tempDie.id == diceId);\n    match.modifier = Number(val);\n    setDice([...temp]);\n  }\n\n  function removeDice(diceId) {\n    let temp = [...dice];\n    let match = temp.find(tempDie => tempDie.id == diceId);\n    let remId = temp.indexOf(match);\n    temp.splice(remId, 1);\n    setDice([...temp]);\n  }\n  console.log(dice);\n  return (\n    <div>\n      <div className=\"header\">Dice Roller</div>\n      <DiceForm update={updateDice} />\n      <div className=\"cardcontainer\">\n        {dice.map(die => {\n          return (\n            <Dice\n              rem={removeDice}\n              mod={updateModifier}\n              diceData={die}\n              key={die.id}\n            />\n          );\n        })}\n      </div>\n      <DiceStats diceData={dice} />\n    </div>\n  );\n}\n\nexport default DiceRoller;\n","import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport Button from \"react-bootstrap/Button\";\nimport Form from \"react-bootstrap/Form\";\n\nexport default function InitForm(props) {\n  const { register, handleSubmit, errors } = useForm();\n  const onSubmit = data => {\n    props.create(\n      data.name,\n      Number(data.init),\n      data.type,\n      props.data.length + 1 //This one is to offset the array[0] position\n    );\n  };\n\n  return (\n    <div className=\"initform\">\n      <Form\n        onSubmit={handleSubmit(onSubmit)}\n        className=\"justify-content-md-center\"\n      >\n        <Form.Group controlId=\"formName\">\n          <Form.Label>Create new Trackee ({props.data.length})</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Name\"\n            name=\"name\"\n            ref={register({ required: true, min: 1 })}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formInit\">\n          <Form.Control\n            type=\"number\"\n            placeholder=\"Inititative (#)\"\n            name=\"init\"\n            ref={register}\n          />\n        </Form.Group>\n\n        <Form.Group controlId=\"formType\">\n          <Form.Control\n            as=\"select\"\n            name=\"type\"\n            ref={register({ required: true })}\n          >\n            <option value=\"Player\">Player</option>\n            <option value=\"NPC\"> NPC</option>\n          </Form.Control>\n          <Form.Text>Select Trackee type</Form.Text>\n        </Form.Group>\n        <Button variant=\"dark\" type=\"submit\">\n          Submit new Trackee\n        </Button>\n      </Form>\n    </div>\n  );\n}\n","import React from \"react\";\n\nfunction Trackee(props) {\n  let data = props.data;\n  let colorType = data.type == \"NPC\" ? \"red\" : \"green\";\n\n  function handleButton(e) {\n    props.remove(data.id);\n  }\n\n  return (\n    <li style={{ color: colorType }}>\n      Name : {data.name} || Initiative : {data.init} <input type=\"text\"></input>\n      <button onClick={handleButton}>X</button>\n    </li>\n  );\n}\n\nexport default Trackee;\n","import React, { useState } from \"react\";\nimport InitForm from \"./InitForm\";\nimport Trackee from \"./Trackee\";\nimport { array } from \"prop-types\";\n\nfunction InititativeTracker() {\n  let [trackers, setTrackers] = useState([]);\n\n  function compare(a, b) {\n    if (a.init > b.init) return -1;\n    if (b.init > a.init) return 1;\n  }\n\n  function newTrackee(str, num, ty, tid) {\n    let trackee = {\n      name: str,\n      init: num,\n      type: ty,\n      id: tid\n    };\n    setTrackers([...trackers, trackee]);\n  }\n\n  function removeTrackee(id) {\n    let temp = [...trackers];\n    let find = temp.find(trackee => trackee.id == id);\n    let index = temp.indexOf(find);\n    temp.splice(index, 1);\n    setTrackers(temp);\n  }\n\n  return (\n    <div>\n      <div className=\"header\">Inititative Tracker</div>\n      <InitForm data={trackers} create={newTrackee} />\n      <hr></hr>\n      <ul>\n        {trackers.sort(compare).map(tracke => {\n          return (\n            <Trackee remove={removeTrackee} key={tracke.id} data={tracke} />\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nexport default InititativeTracker;\n","import React from \"react\";\n\nfunction Spells() {\n  return (\n    <div>\n      <div className=\"header\">Spells</div>\n    </div>\n  );\n}\n\nexport default Spells;\n","//Packages\nimport React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Nav from \"react-bootstrap/Nav\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useRouteMatch,\n  useParams\n} from \"react-router-dom\";\n//Components\nimport DiceRoller from \"./Components/DiceRoller/DiceRoller\";\nimport InititativeTracker from \"./Components/InitTracker/InititiativeTracker\";\nimport Spells from \"./Components/Spells/Spells\";\n//App\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"header\">\n        Darkwolf's<br></br> Dungeons and Dragons\n      </div>\n      <Router>\n        <Nav variant=\"tabs\" defaultActiveKey=\"/home\">\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-0\">\n              <Link to=\"/\">Dice Roller</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-1\">\n              <Link to=\"/init\">Initiative Tracker</Link>\n            </Nav.Link>\n          </Nav.Item>\n          <Nav.Item>\n            <Nav.Link eventKey=\"link-2\">\n              <Link to=\"/spells\">Spells</Link>\n            </Nav.Link>\n          </Nav.Item>\n        </Nav>\n        <Switch>\n          <Route path=\"/init\">\n            <InititativeTracker />\n          </Route>\n          <Route path=\"/spells\">\n            <Spells />\n          </Route>\n          <Route path=\"/\">\n            <DiceRoller />\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}